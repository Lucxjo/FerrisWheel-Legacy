apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'


android {
    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword 'Leothecat1'
            storeFile file('/Volumes/Development/keystore')
            storePassword 'Leothecat1'
        }
    }
    compileSdkVersion 28

    def versionPropsFile = file('version.properties')
    def value = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['MAJOR_VERSION_NUMBER'] = "2"
        versionProps['MINOR_VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "0"
        // I set it to minus one so the first build is 0 which isn't super important.
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    def runTasks = gradle.startParameter.taskNames
    if ('assembleRelease' in runTasks) {
        value = 1
    }

    def mVersionName = ""
    def mFileName = ""
    def code

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + value).toString()
        versionProps['MAJOR_VERSION_NUMBER'] = (versionProps['MAJOR_VERSION_NUMBER']).toString()
        versionProps['MINOR_VERSION_NUMBER'] = (versionProps['MINOR_VERSION_NUMBER']).toString()
        versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        // 1: change major and minor version here
        mVersionName = "${versionProps['MAJOR_VERSION_NUMBER']}.${versionProps['MINOR_VERSION_NUMBER']}.${versionProps['VERSION_PATCH']}"
        // 2: change AppName for your app name
        mFileName = "FerrisWheel-${mVersionName}.apk"

        code = "${versionProps['VERSION_BUILD']}".toInteger()

        defaultConfig {
            applicationId "co.aplicared.ferriswheel"
            minSdkVersion 23
            targetSdkVersion 28
            versionCode code
            versionName mVersionName
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
    }

    if ('assembleRelease' in runTasks) {
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    outputFileName = mFileName
                }
            }
        }
    }

    task copyApkFiles(type: Copy){
        from 'build/outputs/apk/release'
        into '../apk'
        include mFileName
    }

    afterEvaluate {
        assembleRelease.doLast {
            tasks.copyApkFiles.execute()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    mavenCentral()
    google()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:customtabs:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'tools.fastlane:screengrab:1.0.0'
    implementation "com.google.firebase:firebase-auth:16.1.0"
    implementation "com.google.firebase:firebase-firestore:18.0.0"
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation 'com.google.firebase:firebase-config:16.1.3'
    implementation 'com.firebaseui:firebase-ui-auth:4.0.0'
    implementation 'com.firebaseui:firebase-ui-storage:3.2.2'
    implementation "com.google.firebase:firebase-messaging:17.3.4"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-design-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$anko_version"
    implementation 'com.xwray:groupie:2.1.0'
    implementation 'com.xwray:groupie-kotlin-android-extensions:2.1.0'
    implementation "com.airbnb.android:lottie:$lottie_version"
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    kotlin {
        experimental {
            coroutines "enable"
        }
    }
    androidExtensions {
        experimental = true
    }
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.6@aar') {
        transitive = true
    }

    implementation('com.crashlytics.sdk.android:answers:1.4.4@aar') {
        transitive = true
    }
}

apply plugin: 'com.google.gms.google-services'
